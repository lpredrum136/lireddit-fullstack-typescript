NODE/TS SETUP
1. npm init: index.js
npm i --save-dev @types/node typescript

2. mot so nguoi thich dung scripts: "start": "ts-node src/index.ts"
npm i --save-dev ts-node
npx tsconfig.json (Ben Awad create this) -> choose node

3. index.ts: console.log('hello')
npm run start

4. but this is better:
"scripts": {
    "start": "node dist/index",
    "startts": "ts-node src/index.ts",
    "watch": "tsc -w",
    "test": "echo \"Error: no test specified\" && exit 1"
  }

5. npm i --save-dev nodemon
"scripts": {
    "start": "node dist/index.js",
    "dev": "nodemon dist/index.js",
    "startts": "ts-node src/index.ts",
    "devts": "nodemon --exec ts-node src/index.ts",
    "watch": "tsc -w",
    "test": "echo \"Error: no test specified\" && exit 1"
  }

MICROORM SETUP:
npm i @mikro-orm/cli @mikro-orm/core @mikro-orm/migrations @mikro-orm/postgresql pg
Nho cai postgresql (google)
cli: createdb lireddit or run pgAdmin in windows to do it in GUI
Chinh connection trong index.ts
add them vao package.json
"mikro-orm": {
    "useTsNode": true,
    "configPaths": [
      "./src/mikro-orm.config.ts",
      "./dist/mikro-orm.config.js"
    ]
  }
add them file mikro-orm.config.ts, them connection, them migrations
CLI: npx mikro-orm migration:create
neu gap loi migrations thi delete ca folder dist di va lam lai tu dau

APOLLO SERVER EXPRESS SETUP
npm i apollo-server-express express graphql type-graphql (type-graphql is for easier TS use in GraphQL)
npm i @types/express --save-dev
npm i reflect-metadata

REGISTER RESOLVER
Nhu vay tu nay ve sau workflow: Tao entity, dua vao mikroorm config, chay lenh mikroorm migration, migrator.up() se tu dong day migration len
npm i argon2