NODE/TS SETUP
1. npm init: index.js
npm i --save-dev @types/node typescript

2. mot so nguoi thich dung scripts: "start": "ts-node src/index.ts"
npm i --save-dev ts-node
npx tsconfig.json (Ben Awad create this) -> choose node

3. index.ts: console.log('hello')
npm run start

4. but this is better:
"scripts": {
    "start": "node dist/index",
    "startts": "ts-node src/index.ts",
    "watch": "tsc -w",
    "test": "echo \"Error: no test specified\" && exit 1"
  }

5. npm i --save-dev nodemon
"scripts": {
    "start": "node dist/index.js",
    "server": "nodemon dist/index.js",
    "startts": "ts-node src/index.ts",
    "serverts": "nodemon --exec ts-node src/index.ts",
    "watch": "tsc -w",
    "test": "echo \"Error: no test specified\" && exit 1"
  }

MICROORM SETUP:
npm i @mikro-orm/cli @mikro-orm/core @mikro-orm/migrations @mikro-orm/postgresql pg
Nho cai postgresql (google)
cli: createdb lireddit or run pgAdmin in windows to do it in GUI
Chinh connection trong index.ts
add them vao package.json
"mikro-orm": {
    "useTsNode": true,
    "configPaths": [
      "./src/mikro-orm.config.ts",
      "./dist/mikro-orm.config.js"
    ]
  }
add them file mikro-orm.config.ts, them connection, them migrations
CLI: npx mikro-orm migration:create
neu gap loi migrations thi delete ca folder dist di va lam lai tu dau

APOLLO SERVER EXPRESS SETUP
npm i apollo-server-express express graphql type-graphql class-validator (type-graphql is for easier TS use in GraphQL) 
(type-graphql is dependent on class-validator. If you want to suppress tsc error, add "skipLibCheck": true in tsconfig.json)
npm i @types/express --save-dev
npm i reflect-metadata

REGISTER RESOLVER
Nhu vay tu nay ve sau workflow: Tao entity, dua vao mikroorm config, chay lenh mikroorm migration, migrator.up() se tu dong day migration len
npm i argon2

SESSION AUTHENTICATION
install Redis, tai thu muc goc: https://auth0.com/blog/introduction-to-redis-install-cli-commands-and-data-types/
- curl -O http://download.redis.io/redis-stable.tar.gz
- tar xvzf redis-stable.tar.gz
- cd redis-stable
- make

- make test 
if "you need tcl":
- download tcl at
- https://www.tcl.tk/software/tcltk/download84.html
cd to where you download tcl
tar xvzf tcl8.6.11-src.tar.gz

cd tcl8.6.11/
cd unix/
./configure
make
make install
 

npm i redis connect-redis express-session
npm i --save-dev @types/redis @types/connect-redis @types/express-session

Nhung ma install redis kho vl nen dang tim cach khac

npm i connect-mongo

sau khi tao cluster tai mongo cloud thi da chay duoc roi

mo GraphQL playground => settings -> request.credentials: include

neu gap loi Namespace 'global.Express' has no exported member 'SessionData' trong tsc thi:
reverted back to this version to fix the issue: "@types/express-session": "1.17.0",
https://stackoverflow.com/questions/64845125/namespace-express-has-no-exported-member-sessiondata

HOW SESSION AND COOKIE WORKS

req.session.userID = user.id
se tao ra 1 object kieu {userId: 1}

1. express-session va connect-mongo se tao ban luu trong mongoDB, co the kiem tra trong mongoDB
_id: asfasdfdshgdkgsj, session: {cookie: {.....}, userId: 1}

2. express-session will store a cookie in client browser lireddit-cookie: someRANDOMStringabc, duoc encrypt voi secret

3. when user makes request
someRANDOMStringabc is sent to server 

4. Server intercepts the request, decrypt the cookie
get the session id (_id in mongoDB)

5. make a request to mongoDB.
_id => se ra {userId: 1}

6. {userId: 1} is attached back to req to go forward, under the form of req.session = {..., userId: 1}

NEXT JS & CHAKRA
Go up one folder
npx create-next-app --example with-chakra-ui lireddit-client (thuc ra trong examples co cai co san chakra with typescript)

but I like to live dangerously, so I installed it to same folder lol

cd lireddit-client
npm run dev

change from .js to .tsx
change index.tsx: hello world
keep _app.tsx intact
theme thanh tsx
delete het trong src/components di

ctrl c tat client di, Next se hoi setup TS.
neu k hoi thi chac la cu tu dong di cai thoi:
npm i --save-dev typescript @types/node @types/react @types/react-dom

can cai them npm i formik

URQL BASICS
I don't like URQL so gonna use Apollo Client
cd lireddit-client
npm install @apollo/client graphql

Tam thoi chua dung duoc TS len Apollo Client, vi chang le phai viet tay type and interface???, dang nghien cuu apollo codegen

Neu ta gui 
const client = new ApolloClient({
  uri: 'https://api.example.com',
  cache: new InMemoryCache(),
  // Enable sending cookies over cross-origin requests
  credentials: 'include'
});

de bat client send credentials nhu luc con o playground thi se gap loi cors

Co the sua bang cach npm i cors
va npm i @types/cors --save-dev

const app = express()
  app.use(
    cors({
      origin: 'http://localhost:3000',
      credentials: true
    })
  )

GRAPHQL CODEGEN
  Ben co su dung Graphql codegen nen chung ta se install codegen, so here we go
IN CLIENT: npm install --save-dev @graphql-codegen/cli
then init:
npx graphql-codegen init:
- React
- Where is schema: http://localhost:4000/graphql
- WHere to store operations and fragments? we already have a src/graphql-client folder (for testing earlier), enter src/graphql-client/**/*.graphql

- Pick plugins: keep default (3 selected)
- Where to write output: default
- Introsepction: No
- Name the config: default (codegen.yml)
- What script? codegen

Se tu tao ra codegen.yml va bao:
Config file generated at codegen.yml
    
      $ npm install

    To install the plugins.

      $ npm run codegen

    To run GraphQL Code Generator. 

Next, change graphql-client/mutations.ts to graphql-client/mutations/register.graphql to match src/graphql-client/**/*.graphql above
va bo gql di, tuc la 
mutation RegisterUser($registerInput: AuthInput!) {
  register(registerInput: $registerInput) {
    code
    ...
  }
}

Finally, make sure your server run (npm run watch and npm run server), then in client, run:
npm install (to install plugins)
npm run codegen se ra file graphql.tsx toan la types ca

change client tsconfig.json: strict = true neu muon response.data?.register (? means may be undefined so it doesn't throw error)

REGISTER ERROR HANDLING 
Xem git commit 

NAVBAR
Hoan thanh login: them login.graphql vao, cd lireddit-client, npm run codegen
vao lireddit-client/tsconfig.json

copy 1 dong khac tu server tsconfig.json
"noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,

Navbar: Neu logout (clear cookie) roi refresh se hien login register. Bam login, sau do redirect roi nhung van hien login register 
Nguyen nhan la do graphql cache. Khi quay lai home page (redirect) graphql chi load tu cache ra ma thoi

LOGOUT

CHUAN BI SETUP SSR
npm i deepmerge lodash (for SSR)

SSR la gi?
me => browser http://localhost:3000
-> request to next.js server
-> next.js server makes request to graphql server to fetch posts
-> next builds html and sends back to browser

https://youtu.be/I6ypD7qv3Z8?t=14169

TAO EMAIL
vao server (tuc la thu muc goc)
npm i nodemailer
npm i @types/nodemailer --save-dev

nho la khi chinh cai gi trong Entities thi chay lai lenh create:migration trong package.json de update tren DB
Doan nay k duoc, phai vao pgAdmin4 xoa ca table user di, xoa dist folder di, xoa het file trong src/migrations di
sau do phai chay lai npm run create:migration, npm run watch, npm run server moi them duoc cot email
sau do phai doi trong resolver de nhan them property email

QUAY LAI DOI FORGOT PASSWORD 
npm i uuid
npm i @types/uuid --save-dev
Ben awad con chay ca: npm i ioredis va npm i --save-dev @types/ioredis

Ben Awad luu forgot password token trong redis nhung chung ta k co redis nen se luu trong db thong thuong postgresql vay,
cho nay dung jsonwebtoken cung duoc,
dai khai la tim duoc ra email cua user dang request forgot password, roi tra cho ho mot token gi do gan voi ho trong db

Lam theo cai nay, vi k co redis, va mikroorm k ho tro expiration of token, nen se su dung mongodb vay
https://blog.logrocket.com/implementing-a-secure-password-reset-in-node-js/

npm i mongoose
to be exact npm i mongoose@5.10.18 (for typegoose to work)
npm i @types/mongoose --save-dev

npm i @typegoose/typegoose

https://youtu.be/I6ypD7qv3Z8?t=19198

TYPEORM 

npm i typeorm 